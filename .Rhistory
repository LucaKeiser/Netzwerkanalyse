# Der Variationsbereich der Gewichtung (Kantenattribut) wird auf [0, 1] festgelegt.
ties_SR$weight_std <- (ties_SR$weight - min(ties_SR$weight)) /  (max(ties_SR$weight) - min(ties_SR$weight))
# Damit keine Null-Werte entstehend wird 0.05 zu diesen addiert
ties_SR$weight[ties_SR$weight == 0] <- ties_SR$weight[ties_SR$weight == 0] + 0.05
# erstellen des Netzwerkobjekts (tidygraph)
net_SR <- as_tbl_graph(ties_SR,
directed = FALSE)
# Generelle Netzwerkangaben
# Component
count_components(net_SR)
# Dichte
edge_density(net_SR,
loops = FALSE)
# Diameter
diameter(net_SR,
directed = FALSE)
# hinzufügen der Knotenattribute
net_SR <- net_SR %>%
activate(nodes) %>%
# Datentyp muss angepasst werden.
mutate(name = as.numeric(name)) %>%
left_join(parlamentarier,
by = c("name" = "id")) %>%
rename("id" = "name",
"name" = "name.y")
# Hinzufügen Zentralitätsmasse
net_SR <- net_SR %>%
activate(nodes) %>%
# Berechnung und standardisierung([0,1]) der Betweenness
mutate(degree = centrality_degree(),
betweenness = centrality_betweenness(),
closeness = centrality_closeness())
# Ohne jegliche Attribute
set.seed(1234)
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
ggraph(layout = "fr") +
geom_node_point() +
geom_edge_link() +
labs(title = "Ständerätliches Netzwerk - Fruchtermannreingold",
subtitle = "Ohne jegliche Attribute",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert") +
theme_graph()
set.seed(1234)
net_SR %>%
activate(nodes) %>%
filter(betweenness > 5) %>%
ggraph(layout = "circle") +
geom_node_point() +
geom_edge_link() +
labs(title = "Ständerätliches Netzwerk - 'Circle'",
subtitle = "Ohne jegliche Attribute",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert") +
theme_graph()
# Hinzufügen der Kantenattribute
set.seed(1245)
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
ggraph(layout = "fr") +
geom_node_point(aes(color = parlamentarier_partei,
size = betweenness)) +
geom_node_text(aes(label = name),
repel = TRUE) +
geom_edge_link(aes(width = weight_std,
alpha = weight_std),
show.legend = FALSE) +
scale_size(range = c(5, 15)) +
scale_edge_width(range = c(0.1, 1)) +
scale_color_manual(values = c("FDP" = "cornflowerblue",
"Grüne" = "chartreuse2",
"M" = "darkorange",
"SP" = "brown1",
"SVP" = "chartreuse4")) +
guides(size = FALSE) +
theme_graph() +
labs(title = "Ständerätliches Netzwerk - Fruchtermannreingold",
subtitle = "Knotenattribute: Namen, Parteizugehörigkeit und Betweenness-Score\nKantenattribute: Betweenness-Score",
color = "Partei",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert")
# Mit Knotenattributen
set.seed(1245)
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
ggraph(layout = "fr") +
geom_node_point(aes(color = parlamentarier_partei,
size = betweenness)) +
geom_node_text(aes(label = name),
repel = TRUE) +
scale_size(range = c(5, 15)) +
geom_edge_link() +
scale_color_manual(values = c("FDP" = "cornflowerblue",
"Grüne" = "chartreuse2",
"M" = "darkorange",
"SP" = "brown1",
"SVP" = "chartreuse4")) +
guides(size = FALSE) +
theme_graph() +
labs(title = "Ständerätliches Netzwerk - Fruchtermannreingold",
subtitle = "Knotenattribute: Namen, Parteizugehörigkeit und Betweenness-Score\n",
color = "Partei",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert")
# Mit Knotenattributen
set.seed(1245)
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
ggraph(layout = "fr") +
geom_node_point(aes(color = parlamentarier_partei,
size = betweenness)) +
geom_node_text(aes(label = name),
repel = TRUE) +
scale_size(range = c(5, 15)) +
geom_edge_link() +
scale_color_manual(values = c("FDP" = "cornflowerblue",
"Grüne" = "chartreuse2",
"M" = "darkorange",
"SP" = "brown1",
"SVP" = "chartreuse4")) +
guides(size = FALSE) +
theme_graph() +
labs(title = "Ständerätliches Netzwerk - Fruchtermannreingold",
subtitle = "Knotenattribute: Namen, Parteizugehörigkeit und Betweenness-Score\n",
color = "Partei",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert")
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
graph_mutual_count()
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
graph_size()
net_SR %>%
filter(betweenness >= 5) %>%
graph_size()
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
graph_size()
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5)
# Chunk 1
library(tidyverse)
library(tidygraph)
library(igraph)
library(ggraph)
library(janitor)
library(data.table)
# Einlesen des Datensatzes
doc <- read_delim(here::here("Data", "Lobbywatch", "cartesian_minimal_parlamentarier_interessenbindung.csv"))
# Wir interessieren uns nur die Ständerät:innen
doc_SR <- doc %>%
filter(parlamentarier_rat == "SR")
parlamentarier <- doc_SR %>%
select(parlamentarier_id,
parlamentarier_name,
parlamentarier_partei) %>%
group_by(parlamentarier_name) %>%
distinct(parlamentarier_id,
.keep_all = TRUE) %>%
arrange(parlamentarier_id) %>%
rename("id" = parlamentarier_id) %>%
rename("name" = parlamentarier_name)
# Chunk 2
# Erstellen der Gruppen
groupings <- doc_SR %>%
select(parlamentarier_id,
organisation_id) %>%
mutate(parlamentarier_id = str_c(parlamentarier_id, "",
sep = "_")) %>% # Wird später gebraucht, um die einzelnen IDs wieder voneinander trennen zu können.
group_by(organisation_id, parlamentarier_id) %>%
distinct() %>%
summarise(sum = n())
setDT(groupings)
# N = Anahl geteilter Organisationsmitgliedschaften. In diesem Schritt erstellen wir das Kantenattribut.
ties_SR <- groupings[groupings, on = "organisation_id", allow.cartesian = TRUE][parlamentarier_id<i.parlamentarier_id, .N, .(pair = paste0(parlamentarier_id, i.parlamentarier_id))]
# Chunk 3
# Erstellen eines tidy-Datensatzes
ties_SR <- ties_SR %>%
separate(pair,
into = c("from", "to"),
sep = "_") %>%
rename("weight" = N) %>%
arrange(desc(weight)) %>%
filter(weight >= 5) # Es werden nur Verbindungen zwischen Parlamentarier:innen verwendet, die in >= 5 gleichen Organisationen einsitzen.
# Knoten
parlamentarier
# Kanten
ties_SR
# Der Variationsbereich der Gewichtung (Kantenattribut) wird auf [0, 1] festgelegt.
ties_SR$weight_std <- (ties_SR$weight - min(ties_SR$weight)) /  (max(ties_SR$weight) - min(ties_SR$weight))
# Damit keine Null-Werte entstehend wird 0.05 zu diesen addiert
ties_SR$weight[ties_SR$weight == 0] <- ties_SR$weight[ties_SR$weight == 0] + 0.05
# erstellen des Netzwerkobjekts (tidygraph)
net_SR <- as_tbl_graph(ties_SR,
directed = FALSE)
# Generelle Netzwerkangaben
# Component
count_components(net_SR)
# Dichte
edge_density(net_SR,
loops = FALSE)
# Diameter
diameter(net_SR,
directed = FALSE)
# Chunk 4
# hinzufügen der Knotenattribute
net_SR <- net_SR %>%
activate(nodes) %>%
# Datentyp muss angepasst werden.
mutate(name = as.numeric(name)) %>%
left_join(parlamentarier,
by = c("name" = "id")) %>%
rename("id" = "name",
"name" = "name.y")
# Hinzufügen Zentralitätsmasse
net_SR <- net_SR %>%
activate(nodes) %>%
# Berechnung und standardisierung([0,1]) der Betweenness
mutate(degree = centrality_degree(),
betweenness = centrality_betweenness(),
closeness = centrality_closeness())
# Chunk 5
# Ohne jegliche Attribute
set.seed(1234)
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
ggraph(layout = "fr") +
geom_node_point() +
geom_edge_link() +
labs(title = "Ständerätliches Netzwerk - Fruchtermannreingold",
subtitle = "Ohne jegliche Attribute",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert") +
theme_graph()
set.seed(1234)
net_SR %>%
activate(nodes) %>%
filter(betweenness > 5) %>%
ggraph(layout = "circle") +
geom_node_point() +
geom_edge_link() +
labs(title = "Ständerätliches Netzwerk - 'Circle'",
subtitle = "Ohne jegliche Attribute",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert") +
theme_graph()
# Chunk 6
# Mit Knotenattributen
set.seed(1245)
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
ggraph(layout = "fr") +
geom_node_point(aes(color = parlamentarier_partei,
size = betweenness)) +
geom_node_text(aes(label = name),
repel = TRUE) +
scale_size(range = c(5, 15)) +
geom_edge_link() +
scale_color_manual(values = c("FDP" = "cornflowerblue",
"Grüne" = "chartreuse2",
"M" = "darkorange",
"SP" = "brown1",
"SVP" = "chartreuse4")) +
guides(size = FALSE) +
theme_graph() +
labs(title = "Ständerätliches Netzwerk - Fruchtermannreingold",
subtitle = "Knotenattribute: Namen, Parteizugehörigkeit und Betweenness-Score\n",
color = "Partei",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert")
# Chunk 7
# Hinzufügen der Kantenattribute
set.seed(1245)
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
ggraph(layout = "fr") +
geom_node_point(aes(color = parlamentarier_partei,
size = betweenness)) +
geom_node_text(aes(label = name),
repel = TRUE) +
geom_edge_link(aes(width = weight_std,
alpha = weight_std),
show.legend = FALSE) +
scale_size(range = c(5, 15)) +
scale_edge_width(range = c(0.1, 1)) +
scale_color_manual(values = c("FDP" = "cornflowerblue",
"Grüne" = "chartreuse2",
"M" = "darkorange",
"SP" = "brown1",
"SVP" = "chartreuse4")) +
guides(size = FALSE) +
theme_graph() +
labs(title = "Ständerätliches Netzwerk - Fruchtermannreingold",
subtitle = "Knotenattribute: Namen, Parteizugehörigkeit und Betweenness-Score\nKantenattribute: Betweenness-Score",
color = "Partei",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert")
# Chunk 1
library(tidyverse)
library(tidygraph)
library(igraph)
library(ggraph)
library(janitor)
library(data.table)
# Einlesen des Datensatzes
doc <- read_delim(here::here("Data", "Lobbywatch", "cartesian_minimal_parlamentarier_interessenbindung.csv"))
# Wir interessieren uns nur die Ständerät:innen
doc_SR <- doc %>%
filter(parlamentarier_rat == "SR")
parlamentarier <- doc_SR %>%
select(parlamentarier_id,
parlamentarier_name,
parlamentarier_partei) %>%
group_by(parlamentarier_name) %>%
distinct(parlamentarier_id,
.keep_all = TRUE) %>%
arrange(parlamentarier_id) %>%
rename("id" = parlamentarier_id) %>%
rename("name" = parlamentarier_name)
# Chunk 2
# Erstellen der Gruppen
groupings <- doc_SR %>%
select(parlamentarier_id,
organisation_id) %>%
mutate(parlamentarier_id = str_c(parlamentarier_id, "",
sep = "_")) %>% # Wird später gebraucht, um die einzelnen IDs wieder voneinander trennen zu können.
group_by(organisation_id, parlamentarier_id) %>%
distinct() %>%
summarise(sum = n())
setDT(groupings)
# N = Anahl geteilter Organisationsmitgliedschaften. In diesem Schritt erstellen wir das Kantenattribut.
ties_SR <- groupings[groupings, on = "organisation_id", allow.cartesian = TRUE][parlamentarier_id<i.parlamentarier_id, .N, .(pair = paste0(parlamentarier_id, i.parlamentarier_id))]
# Chunk 3
# Erstellen eines tidy-Datensatzes
ties_SR <- ties_SR %>%
separate(pair,
into = c("from", "to"),
sep = "_") %>%
rename("weight" = N) %>%
arrange(desc(weight)) %>%
filter(weight >= 5) # Es werden nur Verbindungen zwischen Parlamentarier:innen verwendet, die in >= 5 gleichen Organisationen einsitzen.
# Knoten
parlamentarier
# Kanten
ties_SR
# Der Variationsbereich der Gewichtung (Kantenattribut) wird auf [0, 1] festgelegt.
ties_SR$weight_std <- (ties_SR$weight - min(ties_SR$weight)) /  (max(ties_SR$weight) - min(ties_SR$weight))
# Damit keine Null-Werte entstehend wird 0.05 zu diesen addiert
ties_SR$weight[ties_SR$weight == 0] <- ties_SR$weight[ties_SR$weight == 0] + 0.05
# erstellen des Netzwerkobjekts (tidygraph)
net_SR <- as_tbl_graph(ties_SR,
directed = FALSE)
# Generelle Netzwerkangaben
# Component
count_components(net_SR)
# Dichte
edge_density(net_SR,
loops = FALSE)
# Diameter
diameter(net_SR,
directed = FALSE)
# Chunk 4
# hinzufügen der Knotenattribute
net_SR <- net_SR %>%
activate(nodes) %>%
# Datentyp muss angepasst werden.
mutate(name = as.numeric(name)) %>%
left_join(parlamentarier,
by = c("name" = "id")) %>%
rename("id" = "name",
"name" = "name.y")
# Hinzufügen Zentralitätsmasse
net_SR <- net_SR %>%
activate(nodes) %>%
# Berechnung und standardisierung([0,1]) der Betweenness
mutate(degree = centrality_degree(),
betweenness = centrality_betweenness(),
closeness = centrality_closeness())
# Chunk 5
# Ohne jegliche Attribute
set.seed(1234)
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
ggraph(layout = "fr") +
geom_node_point() +
geom_edge_link() +
labs(title = "Ständerätliches Netzwerk - Fruchtermannreingold",
subtitle = "Ohne jegliche Attribute",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert") +
theme_graph()
set.seed(1234)
net_SR %>%
activate(nodes) %>%
filter(betweenness > 5) %>%
ggraph(layout = "circle") +
geom_node_point() +
geom_edge_link() +
labs(title = "Ständerätliches Netzwerk - 'Circle'",
subtitle = "Ohne jegliche Attribute",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert") +
theme_graph()
# Chunk 6
# Mit Knotenattributen
set.seed(1245)
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
ggraph(layout = "fr") +
geom_node_point(aes(color = parlamentarier_partei,
size = betweenness)) +
geom_node_text(aes(label = name),
repel = TRUE) +
scale_size(range = c(5, 15)) +
geom_edge_link() +
scale_color_manual(values = c("FDP" = "cornflowerblue",
"Grüne" = "chartreuse2",
"M" = "darkorange",
"SP" = "brown1",
"SVP" = "chartreuse4")) +
guides(size = FALSE) +
theme_graph() +
labs(title = "Ständerätliches Netzwerk - Fruchtermannreingold",
subtitle = "Knotenattribute: Namen, Parteizugehörigkeit und Betweenness-Score\n",
color = "Partei",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert")
# Chunk 7
# Hinzufügen der Kantenattribute
set.seed(1245)
net_SR %>%
activate(nodes) %>%
filter(betweenness >= 5) %>%
ggraph(layout = "fr") +
geom_node_point(aes(color = parlamentarier_partei,
size = betweenness)) +
geom_node_text(aes(label = name),
repel = TRUE) +
geom_edge_link(aes(width = weight_std,
alpha = weight_std),
show.legend = FALSE) +
scale_size(range = c(5, 15)) +
scale_edge_width(range = c(0.1, 1)) +
scale_color_manual(values = c("FDP" = "cornflowerblue",
"Grüne" = "chartreuse2",
"M" = "darkorange",
"SP" = "brown1",
"SVP" = "chartreuse4")) +
guides(size = FALSE) +
theme_graph() +
labs(title = "Ständerätliches Netzwerk - Fruchtermannreingold",
subtitle = "Knotenattribute: Namen, Parteizugehörigkeit und Betweenness-Score\nKantenattribute: gemeinsame Einsitze/Mitgliedschaften",
color = "Partei",
caption = "Knoten mit einem Betweenness-Score < 5 wurden herausgefiltert")
View(ties_SR)
View(parlamentarier)
View(net_SR)
View(groupings)
View(doc_SR)
library(UserNetR)
library(igraph)
clqexmp <- graph.formula(A:B:C:D--A:B:C:D,D-E,E-F-G-E)
plot(clqexmp)
clique.number(clqexmp)
cliques(clqexmp, min=3)
maximal.cliques(clqexmp,min=3)
largest.cliques(clqexmp)
V(clqexmp)[unlist(largest.cliques(clqexmp))]
data(Moreno)
iMoreno <- asIgraph(Moreno)
table(V(iMoreno)$gender)
modularity(iMoreno,V(iMoreno)$gender)
data(Facebook)
levels(factor(V(Facebook)$group))
grp_num <- as.numeric(factor(V(Facebook)$group))
modularity(Facebook,grp_num)
cw <- cluster_walktrap(iMoreno)
membership(cw)
modularity(cw)
plot(cw, iMoreno)
library(UserNetR)
library(igraph)
clqexmp <- graph.formula(A:B:C:D--A:B:C:D,D-E,E-F-G-E)
plot(clqexmp)
clique.number(clqexmp)
cliques(clqexmp, min=3)
maximal.cliques(clqexmp,min=3)
largest.cliques(clqexmp)
V(clqexmp)[unlist(largest.cliques(clqexmp))]
g25 <- erdos.renyi.game(25, 75, type="gnm")
g50 <- erdos.renyi.game(50, 150, type="gnm")
g100 <- erdos.renyi.game(100, 300, type="gnm")
g500 <- erdos.renyi.game(500, 1500, type="gnm")
nodes <- c(25,50,100,500)
lrgclq <- c(clique.number(g25),clique.number(g50),
clique.number(g100),clique.number(g500))
numclq <- c(length(cliques(g25,min=3)),
length(cliques(g50,min=3)),
length(cliques(g100,min=3)),
length(cliques(g500,min=3)))
clqinfo <- data.frame(Nodes=nodes,Largest=lrgclq,
Number=numclq)
clqinfo
data(DHHS)
library(intergraph)
iDHHS <- asIgraph(DHHS)
graph.density(iDHHS)
iDHHS <- subgraph.edges(iDHHS,E(iDHHS)[collab > 2])
graph.density(iDHHS)
